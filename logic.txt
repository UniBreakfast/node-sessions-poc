
Успешно пройдя процедуру проверки логина и пароля Пользователь рассчитывает
"войти" на сайт - для этого для него начинается сессия
~Сервер создаёт новую сессию для этого пользователя, генерирует случайный токен
Токен отправляется на Клиент, где сохраняется в localStorage
С каждой требующей авторизации операцией токен с Клиента отправляется на Сервер
~На Сервере токен сверяется с Базой открытых сессий
~Если токен обнаружен
  ~Генерируется новый токен, добавляется в массив токенов
  ~Самый старый вытесняется
  ~Массив сохраняется в Базу
  ~Новый токен отправляется Клиенту
Иначе
  Клиенту отправляется отказ в операции и предложение удалить сессию

~Сессии на Сервере между запусками хранятся в Базе
~Каждая сессия содержит id, userid, datestart, datelast, tokens
~tokens - массив FIFO на 4 (например) токена
~При запуске Сервера самые свежие 100 (например) сессий загружаются из Базы
~Они будут удерживаться в памяти сервера во время работы
~При поступлении запросов Клиента новые сессии будут запоминаться
  и в памяти, и в Базе
~При поступлении запросов Клиента старые сессии будут загружаться из Базы
  они будут добавляться к удерживаемым в памяти Сервера LILO до 500 (например)
~При изменении сессий в памяти, они будут изменяться и в Базе

Пользователь может запросить перечень своих сессий
Может дать сессии метку-имя
~Может прервать сессию, подтвердив решение паролем
Может задать лимит ожидания
  для всех (своих) сессий
  для отдельной сессии
